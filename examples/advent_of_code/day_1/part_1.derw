import fs
import globalThis exposing ( Buffer )

type alias Iteration = {
    value: number,
    count: number
}

isIncrease: number -> number -> boolean
isIncrease x y =
    x < y

countHelper: Iteration -> number -> Iteration
countHelper count x =
    if isIncrease count.value x then
        {
            value: x,
            count: count.count + 1
        }
    else
        {
            value: x,
            count: count.count
        }

getCount: Iteration -> number
getCount iteration =
    iteration.count

countIncreases: List number -> number
countIncreases xs =
    xs.reduce countHelper {
        value: 9999,
        count: 0
    }
        |> getCount

adventInput: List number
adventInput =
    fs.readFileSync "input.txt"
        |> toString
        |> split
        |> toNumbers

toInt: string -> number
toInt str =
    globalThis.parseInt str 10

toNumbers: List string -> List number
toNumbers list =
    list.map toInt

split: string -> List string
split file =
    file.split "\n"

toString: Buffer -> string
toString buffer =
    buffer.toString()

exampleMain: void
exampleMain =
    countIncreases [
        199,
        200,
        208,
        210,
        200,
        207,
        240,
        269,
        260,
        263
    ]
        |> globalThis.console.log

main: void
main =
    countIncreases adventInput
        |> globalThis.console.log
